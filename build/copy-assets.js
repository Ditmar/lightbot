const fs = require('fs-extra');
const path = require('path');
const chalk = require('chalk');

async function copyAssets() {
    console.log(chalk.blue('üìã Copiando assets...'));

    const developDir = path.join(process.cwd(), 'www', 'develop');
    const mediaDir = path.join(process.cwd(), 'www', 'media');
    const deployDir = path.join(process.cwd(), 'deploy');

    try {
        // Copiar im√°genes
        const imgSource = path.join(developDir, 'img');
        const imgTarget = path.join(deployDir, 'img');

        if (await fs.pathExists(imgSource)) {
            await fs.copy(imgSource, imgTarget);
            console.log(chalk.gray(`  ‚úì Copiadas im√°genes`));
        }

        // Copiar media (audio y video)
        const mediaTarget = path.join(deployDir, 'media');

        if (await fs.pathExists(mediaDir)) {
            await fs.copy(mediaDir, mediaTarget);
            console.log(chalk.gray(`  ‚úì Copiados archivos multimedia`));
        }

        // Crear index.html optimizado para producci√≥n
        await createProductionHTML();

        console.log(chalk.green(`‚úÖ Assets copiados exitosamente`));

    } catch (error) {
        console.error(chalk.red('‚ùå Error copiando assets:'), error.message);
        process.exit(1);
    }
}

async function createProductionHTML() {
    console.log(chalk.blue('üìù Generando index.html de producci√≥n...'));

    const htmlTemplate = `<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8">
    <title>LightBot v0.9</title>
    <link rel="shortcut icon" href="img/favicon.ico" />
    <link href='http://fonts.googleapis.com/css?family=PT+Sans:400,700' rel='stylesheet' type='text/css' />
    <link href='http://fonts.googleapis.com/css?family=Lato:400,900' rel='stylesheet' type='text/css' />
    <link type="text/css" href="css/lightbot.min.css" rel="stylesheet" />
    <script type="text/javascript" src="js/lightbot.min.js"></script>
  </head>
  <body>
    <div id="audioContainer">
      <div id="audioPlayer"></div>
    </div>

    <div id="lightbot">

      <div id="welcomeScreen" class="ui-screen">
        <button class="helpButton">Ayuda</button>
        <button class="achievementsButton">Logros</button>
        <button class="levelSelectButton ui-state-highlight">Comenzar Juego</button>
        <button class="audioToggleButton">Alternar Audio</button>
      </div>

      <div id="achievementsScreen" class="ui-screen ui-helper-hidden">
        <h1>Logros</h1>
        <ul id="achievementsList">
        </ul>
        <button class="mainMenuButton">Men√∫ Principal</button>
      </div>

      <div id="helpScreen" class="ui-screen ui-helper-hidden">
        <div id="helpScreenAccordionContainer">
          <div id="helpScreenAccordion">
            <h3><a href="#goal">Objetivo del juego</a></h3>
            <div>
              <p>
              Para completar el juego, debes decirle al robot c√≥mo iluminar todas las baldosas de luz en un nivel determinado. Sin embargo, tu √∫nica forma de interactuar con el robot es ensamblando instrucciones en un programa que el robot puede ejecutar.
              </p>
            </div>
            <h3><a href="#howto">C√≥mo jugar</a></h3>
            <div>
              <p>
              Puedes crear un programa arrastrando instrucciones desde la lista de instrucciones y solt√°ndolas en el marco del programa. Las instrucciones se agregar√°n autom√°ticamente en la parte inferior del bloque resaltado.
              </p>
              <p>Ejecuta tu programa haciendo clic en el bot√≥n Ejecutar. Si no est√°s satisfecho con tu programa actual, puedes interrumpir la ejecuci√≥n en cualquier momento haciendo clic en el bot√≥n Detener. Esto reiniciar√° el robot a su posici√≥n inicial.
              </p>
            </div>
            <h3><a href="#objects">Objetos del juego</a></h3>
            <div>
              <p>
              Un nivel est√° compuesto por baldosas grises que tienen cierta altura. Baldosas especiales de <em>luz</em> est√°n esparcidas por todo el nivel. Estas baldosas de luz pueden ser azules, lo que significa que est√°n apagadas, o pueden ser amarillas, lo que significa que est√°n encendidas. Si en alg√∫n momento todas las baldosas de luz en un nivel est√°n encendidas, habr√°s completado ese nivel.
              </p>
            </div>
            <h3><a href="#walk_forward">Instrucci√≥n: caminar hacia adelante</a></h3>
            <div>
              <p>
              Al caminar hacia adelante, el robot avanzar√° un cuadro en la direcci√≥n que est√© mirando actualmente. Este movimiento solo se realizar√° si el espacio al que se dirige tiene la misma altura que el cuadro del que se est√° moviendo. En cualquier otro caso, el movimiento no se realizar√°.
              </p>
            </div>
            <h3><a href="#turn_right">Instrucci√≥n: Girar 90&deg; a la derecha</a></h3>
            <div>
              <p>
              Al girar 90&deg; a la derecha, el robot permanecer√° en su lugar y girar√° 90&deg; (un cuarto de vuelta) a la derecha (en el sentido de las agujas del reloj).
              </p>
            </div>
            <h3><a href="#turn_left">Instrucci√≥n: Girar 90&deg; a la izquierda</a></h3>
            <div>
              <p>
              Al girar 90&deg; a la izquierda, el robot permanecer√° en su lugar y girar√° 90&deg; (un cuarto de vuelta) a la izquierda (en sentido contrario a las agujas del reloj).
              </p>
            </div>
            <h3><a href="#jump">Instrucci√≥n: Saltar</a></h3>
            <div>
              <p>
              Saltar es una combinaci√≥n de un movimiento hacia adelante y un cambio de altura. La direcci√≥n del movimiento es en la direcci√≥n en la que el robot est√° mirando. Un salto hacia arriba solo ser√° exitoso si la baldosa de destino es m√°s alta en exactamente un paso que la baldosa inicial. Si la diferencia de altura es mayor que uno, el salto no ser√° exitoso y no se realizar√° ning√∫n movimiento. Al saltar hacia abajo, no hay l√≠mite para la altura desde la que el robot puede saltar hacia abajo. La √∫nica condici√≥n es que la diferencia de altura sea de al menos uno.
              </p>
            </div>
            <h3><a href="#light">Instrucci√≥n: Iluminar</a></h3>
            <div>
              <p>
              La instrucci√≥n de iluminar se puede usar para alternar las baldosas de luz encendidas o apagadas. Si el robot est√° ubicado en una baldosa de luz apagada cuando se ejecuta la instrucci√≥n de iluminar, la baldosa de luz se encender√°. Sin embargo, si el robot est√° ubicado en una baldosa de luz ya encendida, esa baldosa de luz se apagar√°. Cuando el robot est√° ubicado en una baldosa normal, no sucede nada.
              </p>
            </div>
            <h3><a href="#repeat">Instrucci√≥n: Repetir</a></h3>
            <div>
              <p>
              La instrucci√≥n de repetir es una instrucci√≥n especial que se puede usar para repetir algunas instrucciones un cierto n√∫mero de veces. La instrucci√≥n de repetir tiene un marco especial donde puedes soltar instrucciones desde la lista de instrucciones. Tambi√©n tiene un contador donde puedes definir el n√∫mero de veces que se repetir√°n las instrucciones dentro de la instrucci√≥n de repetir. Incluso es posible colocar una instrucci√≥n de repetir dentro de otra, lo cual es esencial para crear programas muy peque√±os.
              </p>
            </div>
            <h3><a href="#medals">Medallas</a></h3>
            <div>
              <p>
              Las medallas se otorgan por completar niveles con solo una peque√±a cantidad de instrucciones. A veces, estos programas peque√±os hacen que el robot ejecute muchas instrucciones in√∫tiles, lo cual es muy ineficiente y toma mucho tiempo. Ten en cuenta que en la inform√°tica, el <em>mejor</em> programa no es el que <em>contiene</em> la menor cantidad de instrucciones, sino el que hace que el robot <em>ejecute</em> la menor cantidad de instrucciones.
              </p>
            </div>
          </div>
        </div>
        <div id="helpScreenVerticalBar"></div>
        <div id="videoContainer" class="jp-video jp-video-300p">
          <div class="jp-type-single">
            <div id="videoPlayer" class="jp-jplayer"></div>
            <div class="jp-gui">
              <div class="jp-video-play">
                <a href="javascript:;" class="jp-video-play-icon" tabindex="1">reproducir</a>
              </div>
              <div class="jp-interface">
                <div class="jp-progress">
                  <div class="jp-seek-bar">
                    <div class="jp-play-bar"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <button class="mainMenuButton">Men√∫ Principal</button>
      </div>

      <div id="levelSelectScreen" class="ui-screen ui-helper-hidden">
        <h1>Seleccionar Nivel</h1>
        <ul id="levelList">
        </ul>
        <button class="mainMenuButton">Men√∫ Principal</button>
      </div>

      <div id="gameScreen" class="ui-screen ui-helper-hidden">
        <div id="canvasContainer">
          <canvas id="gameCanvas" width="690" height="666"></canvas>
        </div>
        <div id="buttonContainer">
          <button class="levelSelectButton">Atr√°s</button>
          <button class="audioToggleButton">Alternar Audio</button>
          <button id="clearButton">Limpiar</button>
          <button id="runButton">Ejecutar</button>
        </div>
        <div id="instructionsContainer">
          <h2>Instrucciones</h2>
          <div>
            <ul>
                <li><p class="walk"><span class="ui-icon ui-icon-arrowthick-1-n" style="float: left;"></span>Caminar hacia adelante<span class="ui-icon ui-icon-close" style="float: right;"></span></p></li>
                <li><p class="turnRight"><span class="ui-icon ui-icon-arrowreturnthick-1-w flip" style="float: left;"></span>Girar 90&deg; a la derecha<span class="ui-icon ui-icon-close" style="float: right;"></span></p></li>
                <li><p class="turnLeft"><span class="ui-icon ui-icon-arrowreturnthick-1-w" style="float: left;"></span>Girar 90&deg; a la izquierda<span class="ui-icon ui-icon-close" style="float: right;"></span></p></li>
                <li><p class="jump"><span class="ui-icon ui-icon-arrowthickstop-1-n" style="float: left;"></span>Saltar<span class="ui-icon ui-icon-close" style="float: right;"></span></p></li>
                <li><p class="light"><span class="ui-icon ui-icon-lightbulb" style="float: left;"></span>Iluminar<span class="ui-icon ui-icon-close" style="float: right;"></span></p></li>
                <li><p class="repeat"><span class="ui-icon ui-icon-refresh" style="float: left;"></span>Repetir <span><input type="number" min="1" max="99" step="1" value="2"> veces</span><span class="ui-icon ui-icon-close" style="float: right;"></span></p>
                  <div class="droppable">
                    <div class="ui-widget-content">
                      <ul>
                        <li class="placeholder"><p class="placeholder">Suelta tus instrucciones aqu√≠</p></li>
                      </ul>
                    </div>
                  </div>
                </li>
            </ul>
          </div>
        </div>
        <div id="programContainer">
          <h2>Programa</h2>
          <div class="droppable">
            <ul>
            </ul>
          </div>
        </div>
      </div>

      <div id="credits2">
        <div style="float:left;"></div>
        <div style="float:right;"></div>
      </div>
    </div>

    <div id="dialogs">
      <div id="levelCompleteDialog" title="Nivel completado">
        <p>
          <span class="medal" style="float:left; margin:0 7px 50px 0;"></span>
          ¬°Felicidades! ¬°Has completado este nivel usando <span class="nbrOfInstructions"></span> instrucciones!
        </p>
        <p class="message" style="margin-top: 10px"></p>
      </div>

      <div id="achievementDialog" title="¬°Logro desbloqueado!">
        <p>
          <span class="achievement" style="float:left; margin:0 7px 50px 0;"></span>
          <span class="message"></span>
        </p>
      </div>
    </div>
  </body>
</html>`;

    const outputPath = path.join(process.cwd(), 'deploy', 'index.html');
    await fs.writeFile(outputPath, htmlTemplate);
    console.log(chalk.gray(`  ‚úì Generado index.html de producci√≥n`));
}

copyAssets();